Three Keys
Цель игры- Главный герой заперт в локации, по которой можно передвигаться по вертикали и горизонтали. Игрок начинает с середины, цель игры- собрать 3 ключа в 3 углах карты и с их помощью через выход в четвертом углу карты сбежать и закончить игру. Каждый ключ и выход будут охранять большие группы врагов, а сами враги встречаются на локации. Так же будут присутствовать сундуки с вещами

Реализация по классам
Renderable - всё, что мы видим на карте. имеет метод render() для показа спрайта.

StaticObject - объекты, такие как пол, камни, деревья. имеет переменную (bool) is_obstacle чтобы кто-либо мог или не мог передвигаться по этим объектам

DynamicObject - подвижный объект. Имеет функцию move(dx, dy) для перемещения на указанные координаты.

Hero - игрок. наследуется от класса DynamicObject и Inventory
имеет характеристику здоровья и брони

Инвентарь и его взаимодействия

Inventory - при нажатии одной из клавиш будет открываться инвентарь. В нём видны все предметы(класс Item), у некоторых предметов есть оособые свойства. При нажатии по предмету выведется его описание, и задастся вопрос "хотите ли вы использовать предмет?" при нажатии клавиши отвечающей за "нет", игрок вернется в главное меню инвентаря.
Инвентарь игрока ограничен. При подборе предмета сверх максимума игрока спрашивают какой предмет выбросить, чтобы появилось место.

Treasure - наследуется от StaticObject и Inventory. При заходе на клетку с сундуком открывается Inventory сундука. При нажатии на предметы лежащие в нем, показывается описание предмета и задается вопрос, взять лли предмет? независимо от выбора да или нет, инвентарь возвращается к главному виду, но если игрок выбрал да, то предмет добавится к нему в инвентарь.

Бой

Enemy- наследуется от DynamicObject и Inventory
имеет здоровье и броню
Если игрок подошёл ко врагу слишком близко- враг бежит за игроком какое-то время.
Если игрок хочет перейти на клетку врага или наоборот, обоим наносится урон:
первым бъет игрок- из урона его оружия вычитается броня врага
если враг выжил отвечает и он- из его урона вычитается броня игрока
когда враг умирает открывается его Inventory(в нем обычно хлам)
в самом конце игры и у каждого ключа стоит по сильному врагу.

Если  у игрока опускается здоровье до 0, то игра оканчивается, и игроку предлагают начать сначала или выйти из игры.


main.py
грузит игровой процесс

score.py
создает базу данных с информацией о забеге (убитые враги, полученный/нанесенный урон, выпито зелий и т.д.)
записывает или берет из базы данных эту информацию

tiles.py
грузит клетки и передвигаемые объекты

class Tile
базовый класс, дает клетке систему координат

class AnimatedTile(Tile)
анимация клеток и объектов

class Background
объекты с которыми ты не сталкиваешься

Obstacle(Tile)
препятствия(на них нельзя шагать)

AnimatedObstacle(AnimatedTile)
анимация препятствий

Movable(AnimatedTile)
передвигаемые предметы

def step def animation_tick
анимация

class Creature(Movable)

def render_health
красиво выводит здоровье в виде Healthbar

def update
обновляет инвентарь и здоровье

def recieve_damage def recieve_heal
получение/восстановление урона

def step
перемещение

utils.py
набор функций-инструментов (формулы и загрузка изображений)

settings.py
константы, такие как размер инвентаря и размер игрового окна

screen.py
class Camera
камера следует за игроком

class Game

def next_level
загрузка уровня

def stop
остановить игровой процесс

def run
запустить игровой процесс

def render
показывает все клетки

def handle_events
обрабатывает передвижение, атаку и манипуляции с инвентарем

levels.py
загружает уровни и  все, что находится на них

landscape.py
типы статичных клеток и препятствий

items.py
список предметов (брони, оружия и зелий)

inventory.py
система инвентаря. разделена на слоты.

events.py
события (получение и нанесение урона, выпивание зелья)

common.py
группы спрайтов

animation.py
анимация спрайтов

ai.py
поведение врага

creatures.py
существа в игре
включает в себя врагов (наследуемых от класса AI)
и игрока, которым ты сам управляешь